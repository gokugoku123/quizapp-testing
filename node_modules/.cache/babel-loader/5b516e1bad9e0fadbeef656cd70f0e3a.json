{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Gokul\\\\Downloads\\\\Projects\\\\React\\\\Sample\\\\quiz-app\\\\src\\\\components\\\\UI\\\\Card\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport classes from \"./Card.module.css\";\n\nconst Card = props => {\n  _s();\n\n  let [state, setState] = useState({\n    options: props.options,\n    answer: props.answer,\n    isOptionTrue: null\n  });\n\n  const logg = () => console.log(state);\n\n  const checkAnswer = event => {\n    props.attempt();\n\n    if (event.target.innerHTML === state.answer) {\n      setState(prevState => {\n        return { ...prevState,\n          isOptionTrue: true\n        };\n      });\n      props.correctAnswerMarkUpdate();\n    }\n\n    setState(prevState => {\n      return { ...prevState,\n        isUpdatedOnce: true\n      };\n    });\n  };\n\n  const options = Object.keys(props.options).map((optionIndex, ind) => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      disabled: state.isUpdatedOnce,\n      click: checkAnswer,\n      children: props.options[optionIndex]\n    }, ind, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Card,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", props.question, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Card, \"K6iNml7nnWkRT740ZMEcK/mGHW8=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/Gokul/Downloads/Projects/React/Sample/quiz-app/src/components/UI/Card/Card.js"],"names":["React","useEffect","useState","Button","classes","Card","props","state","setState","options","answer","isOptionTrue","logg","console","log","checkAnswer","event","attempt","target","innerHTML","prevState","correctAnswerMarkUpdate","isUpdatedOnce","Object","keys","map","optionIndex","ind","question"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAAA;;AAClB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAC7BO,IAAAA,OAAO,EAAGH,KAAK,CAACG,OADa;AAE7BC,IAAAA,MAAM,EAAGJ,KAAK,CAACI,MAFc;AAG7BC,IAAAA,YAAY,EAAG;AAHc,GAAD,CAAhC;;AAMA,QAAMC,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYP,KAAZ,CAAnB;;AAEA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC3BV,IAAAA,KAAK,CAACW,OAAN;;AACA,QAAGD,KAAK,CAACE,MAAN,CAAaC,SAAb,KAA2BZ,KAAK,CAACG,MAApC,EAA4C;AACxCF,MAAAA,QAAQ,CAAEY,SAAS,IAAI;AACnB,eAAO,EACH,GAAGA,SADA;AAEHT,UAAAA,YAAY,EAAG;AAFZ,SAAP;AAIH,OALO,CAAR;AAMAL,MAAAA,KAAK,CAACe,uBAAN;AACH;;AAEDb,IAAAA,QAAQ,CAACY,SAAS,IAAI;AAClB,aAAO,EACH,GAAGA,SADA;AAEHE,QAAAA,aAAa,EAAG;AAFb,OAAP;AAIH,KALO,CAAR;AAMH,GAlBD;;AAoBA,QAAMb,OAAO,GAAGc,MAAM,CAACC,IAAP,CAAYlB,KAAK,CAACG,OAAlB,EAA2BgB,GAA3B,CAA+B,CAACC,WAAD,EAAcC,GAAd,KAAsB;AACjE,wBACI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEpB,KAAK,CAACe,aAAxB;AAAuC,MAAA,KAAK,EAAEP,WAA9C;AAAA,gBAAuET,KAAK,CAACG,OAAN,CAAciB,WAAd;AAAvE,OAAgEC,GAAhE;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJe,CAAhB;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACC,IAAxB;AAAA,4BACI;AAAA,sBAAMC,KAAK,CAACsB,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACKnB;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3CD;;GAAMJ,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = props => {\r\n    let [state, setState] = useState({\r\n        options : props.options,\r\n        answer : props.answer,\r\n        isOptionTrue : null\r\n    });\r\n\r\n    const logg = () => console.log(state);\r\n\r\n    const checkAnswer = (event) => {\r\n        props.attempt();\r\n        if(event.target.innerHTML === state.answer) {\r\n            setState( prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    isOptionTrue : true\r\n                }\r\n            });\r\n            props.correctAnswerMarkUpdate();\r\n        }\r\n        \r\n        setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                isUpdatedOnce : true\r\n            }\r\n        })\r\n    }\r\n\r\n    const options = Object.keys(props.options).map((optionIndex, ind) => {\r\n        return (\r\n            <Button disabled={state.isUpdatedOnce} click={checkAnswer} key={ind} >{props.options[optionIndex]}</Button>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Card}>\r\n            <h4> {props.question} </h4>\r\n            <div>\r\n                {options}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}